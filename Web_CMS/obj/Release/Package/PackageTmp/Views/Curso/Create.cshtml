@model Dominio.SBE_ST_Curso
@using System.Web.UI.WebControls;


@{
    var nome = "Curso";
    var controller = "Curso";

    var categorias = new List<ListItem>
    {
          new ListItem { Text = "EAD", Value="EAD" },
          new ListItem { Text = "Extensão Presencial", Value="Extensão Presencial" },
          new ListItem { Text = "Pós-Graduação", Value="Pós-Graduação" }
    };


    var corpoDocentes = ViewData["CorpoDocente"] as IEnumerable<Dominio.SBE_ST_CorpoDocente>;
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    <div class="col-lg-12">
        <h1 class="page-header">@nome</h1>
    </div>
    <div class="row">
        <div class="col-lg-8">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Novo @nome
                </div>
                <div class="panel-body">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Categoria)
                    </div>
                    <div class="editor-field">
                        @Html.DropDownListFor(m => m.Categoria, new SelectList(categorias, "Value", "Text"))
                        @Html.ValidationMessageFor(model => model.Categoria)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Titulo)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Titulo)<br />
                        @Html.ValidationMessageFor(model => model.Titulo)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.SubTitulo)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.SubTitulo)<br />
                        @Html.ValidationMessageFor(model => model.SubTitulo)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Inicio)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Inicio)
                        @Html.ValidationMessageFor(model => model.Inicio)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Local)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(m => m.Local)
                        @Html.ValidationMessageFor(model => model.Local)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Data)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Data)
                        @Html.ValidationMessageFor(model => model.Data)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Conteudo)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Conteudo)
                        @Html.ValidationMessageFor(model => model.Conteudo)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Banner)
                    </div>
                    <div class="editor-field">
                        <input type="file" name="FileBanner" id="FileBanner" />
                        @Html.HiddenFor(model => model.Banner)<br />
                        @Html.ValidationMessageFor(model => model.Banner)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.MiniBanner)
                    </div>
                    <div class="editor-field">
                        <input type="file" name="FileMiniBanner" id="FileMiniBanner" />
                        @Html.HiddenFor(model => model.MiniBanner)<br />
                        @Html.ValidationMessageFor(model => model.MiniBanner)
                    </div>
                </div>

                <div class="panel-footer">
                    <button type="button" onclick="postUpload('@controller/Create', '@controller/Index');" class="btn btn-success">Salvar</button>
                    <button type="button" class="btn btn-info" onclick="Open('@controller/Index');">Voltar</button>
                </div>
            </div>
        </div>

        <div class="col-lg-4">
            <div class="panel panel-default" style="max-height:800px;">
                <div class="panel-heading">
                    Coordenadores<br />
                        <input type="text" id="search-criteria" />
                </div>
                <div class="panel-body">
                    @foreach (var corpoDocente in corpoDocentes)
                    {
                        <div class="teste">
                            <label>
                                @Html.CheckBox("chk", false, new { @value = corpoDocente.Id })
                            @corpoDocente.Nome
                        </label>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

<script>
    function postUpload(post, redirect) {
        if ($("form").valid()) {
            redirect = redirect + "?categoria=" + $("#Categoria").val();
            uploadfile(post, redirect, '@controller/UploadArquivo', 'Banner', 'FileBanner', 'MiniBanner', 'FileMiniBanner');
        }
    }

    $("#search-criteria").on("keyup", function () {
        var g = $(this).val().toLowerCase();
        var value = $.trim($("#search-criteria").val());
        
        if (value.length > 0) {
            $("label").each(function () {
                var s = $(this).text().toLowerCase();
                if (s.indexOf(g) != -1) {
                    $(this).parent().closest('.teste').show();
                }
                else {
                    $(this).parent().closest('.teste').hide();
                }
            });
        } else {
            $('.teste').show();
        }
    });

</script>


@Scripts.Render("~/bundles/jqueryval")
