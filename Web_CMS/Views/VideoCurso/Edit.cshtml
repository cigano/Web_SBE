@model Dominio.SBE_ST_VideoCurso
@using System.Web.UI.WebControls;
@using Web_CMS.Helpers;

@{
    var nome = "Vídeo Curso";
    var controller = "VideoCurso";

    var corpoDocentes = ViewData["CorpoDocente"] as IEnumerable<Dominio.SBE_ST_CorpoDocente>;


}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.Id)


    <div class="col-lg-12">
        <h1 class="page-header">@nome</h1>
    </div>
    <div class="row">
        <div class="col-lg-8">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Editar @nome
                </div>
                <div class="panel-body">

                    <div class="editor-label">
                        @Html.LabelFor(model => model.Titulo)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Titulo)<br />
                        @Html.ValidationMessageFor(model => model.Titulo)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.SubTitulo)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.SubTitulo)<br />
                        @Html.ValidationMessageFor(model => model.SubTitulo)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Profissao)
                    </div>
                    <div class="editor-field">
                        @Html.EditorFor(model => model.Profissao)
                        @Html.ValidationMessageFor(model => model.Profissao)
                    </div>
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Conteudo)
                    </div>
                    <div class="editor-field">
                        @Html.TextAreaFor(model => model.Conteudo)
                        @Html.ValidationMessageFor(model => model.Conteudo)
                    </div>

                    <div>
                        <label>Trocar Banner (<a href="http://ipupo.com.br/@Caminho.VideoCurso()@Model.Banner" target="_blank">Visualizar Imagem Atual</a>)</label>
                    </div>
                    <div>
                        <label>@Html.RadioButton("Trocar", "Sim", new { id = "Sim" }) Sim</label>
                        <label>@Html.RadioButton("Trocar", "Não", true, new { id = "Nao" }) Não</label>
                    </div>


                    <div class="editor-field">
                        <input type="file" name="FileBanner" id="FileBanner" />
                        @Html.HiddenFor(model => model.Banner)<br />
                        @Html.ValidationMessageFor(model => model.Banner)
                    </div>


                    <div>
                        <label>Trocar Mini Banner (<a href="http://ipupo.com.br/@Caminho.VideoCurso()@Model.MiniBanner" target="_blank">Visualizar Imagem Atual</a>)</label>
                    </div>
                    <div>
                        <label>@Html.RadioButton("TrocarM", "Sim", new { id = "SimM" }) Sim</label>
                        <label>@Html.RadioButton("TrocarM", "Não", true, new { id = "NaoM" }) Não</label>
                    </div>


                    <div class="editor-field">
                        <input type="file" name="FileMiniBanner" id="FileMiniBanner" />
                        @Html.HiddenFor(model => model.MiniBanner)<br />
                        @Html.ValidationMessageFor(model => model.MiniBanner)
                    </div>

                </div>
                <div class="panel-footer">
                    <button type="button" onclick="postUpload('@controller/Edit', '@controller/Index');" class="btn btn-success">Salvar</button>
                    <button type="button" class="btn btn-info" onclick="Open('@controller/Index');">Voltar</button>
                </div>
            </div>
        </div>


        <div class="col-lg-4">
            <div class="panel panel-default" style="max-height:800px;">
                <div class="panel-heading">
                    Coordenadores<br />
                    <input type="text" id="search-criteria" />
                </div>
                <div class="panel-body">
                    @foreach (var corpoDocente in corpoDocentes)
                    {
                        <div class="teste">
                            <label>
                                @Html.CheckBox("chk", false, new { @value = corpoDocente.Id })
                                @corpoDocente.Nome
                            </label>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    

        @Html.Hidden("ChCheck", string.Join(",", Model.Coordenacao.Select(x => x.Id)))
}


<script>

    $(document).ready(function () {
        $('#FileBanner').prop('disabled', true);
        $('#FileMiniBanner').prop('disabled', true);
    });

    $('#Sim').click(function () {
        $('#FileBanner').prop('disabled', !$('#Sim').is(':checked'));
    });

    $('#Nao').click(function () {
        $('#FileBanner').prop('disabled', $('#Nao').is(':checked'));
    });

    $('#SimM').click(function () {
        $('#FileMiniBanner').prop('disabled', !$('#SimM').is(':checked'));
    });

    $('#NaoM').click(function () {
        $('#FileMiniBanner').prop('disabled', $('#NaoM').is(':checked'));
    });


    function postUpload(post, redirect) {
        if ($("form").valid()) {
            redirect = redirect + "?categoria=" + $("#Categoria").val();
            if ($('#Sim').is(':checked')) {
                if ($('#SimM').is(':checked'))
                    uploadfile(post, redirect, '@controller/UploadArquivo', 'Banner', 'FileBanner', 'MiniBanner', 'FileMiniBanner');
                else
                    uploadfile(post, redirect, '@controller/UploadArquivo', 'Banner', 'FileBanner');
            } else {
                if ($('#SimM').is(':checked'))
                    uploadfile(post, redirect, '@controller/UploadArquivo', 'MiniBanner', 'FileMiniBanner');
                else
                    OpenPost(post, redirect);
            }
        }
    }

    $("#search-criteria").on("keyup", function () {
        var g = $(this).val().toLowerCase();
        var value = $.trim($("#search-criteria").val());

        if (value.length > 0) {
            $("label").each(function () {
                var s = $(this).text().toLowerCase();
                if (s.indexOf(g) != -1) {
                    $(this).parent().closest('.teste').show();
                }
                else {
                    $(this).parent().closest('.teste').hide();
                }
            });
        } else {
            $('.teste').show();
        }
    });


    var checks = $('#ChCheck').val().split(",");
    var check;
    for (check in checks) {
        $('input[value=' + checks[check] + ']').prop("checked", true);
    }
</script>

@Scripts.Render("~/bundles/jqueryval")
